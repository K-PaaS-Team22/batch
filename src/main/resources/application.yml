server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://mysql-service:3306/batch
    username: root
    password: 12345678
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  application:
    name: batch
  kafka:
    bootstrap-servers: kafka-service:9092

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'  # 또는 특정 클래스 패키지명
  batch:
    job:
      enabled: true



safe:
  api:
    winter:
      url: "https://www.safetydata.go.kr/V2/api/DSSP-IF-10804"
      serviceKey: "6Q6R2QY993R2B3TF"
    summer:
      url: "https://www.safetydata.go.kr/V2/api/DSSP-IF-10942"
      serviceKey: "GU0U793IUIOO3KS9"
    weather:
      url: "https://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst"
      serviceKey: "xL9ECEGlftsuQit104MUscQtexMMh5yAgllGBOKXMc12gkXriLXuQFcm21Y2pBD9hDwW2sQhi%2BnVDX8AHMrKcg%3D%3D"
      locations:
        names: ["서울 중구", "서울 강남구", "서울 강서구", "성남시 분당구", "수원시", "고양시", "부천시", "안양시", "용인시", "인천 중구", "파주시", "남양주시"]
        nx:  [60, 61, 58, 62, 60, 57, 57, 59, 63, 55, 56, 63]
        ny:  [127, 126, 126, 123, 121, 128, 126, 123, 119, 124, 131, 128]

    numOfRows: 1000
    startLat: 36.8938
    startLot: 126.3692
    endLat: 38.2951
    endLot: 127.8407
